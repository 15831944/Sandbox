<!DOCTYPE HTML>
<html lang="en">
<head>
<title>Move Line</title>
<meta charset = "UTF-8"/>

<!-- Update the path to paper js -->
<script type="text/javascript" src="raphael.js"></script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.js"></script>

<style type="text/css">
svg {
    border: solid 1px #000;
}
</style>

</head>
<body>
<div id="canvas"></div>
<button type="button" id="clearBtn">Clear</button>
</body>
</html>

<script type="text/javascript"> 
    //<![CDATA[
    var CANVAS_WIDTH = 500;
    var CANVAS_HEIGHT = 500;
    var LINE_WIDTH = 5;
    var CONTROL_POINT_RADIOUS = 10;

    function Vertex(x, y, paper) {
        this.x = x;
        this.y = y;
        this.paper = paper;
        this.gizmo = null;
        Vertex.prototype.update = function(x, y) {
            this.x = x;
            this.y = y;
        }

        Vertex.prototype.startEdit = function () {
              this.gizmo = paper.circle(this.x, this.y, CONTROL_POINT_RADIOUS);

              this.gizmo.attr({ fill: "yellow" });
//            gizmo.drag(function (dx, dy, redraw) {
//                // handler for moving  
//                x = x + dx;s
//                y = y + dy;
//            },function () {
//                // handler for drag start

//            }, function () {
//                // handler for drag end

//            });
        }
        Vertex.prototype.endEdit = function () {
            if(this.gizmo != null)
                this.gizmo.remove();
        }
    }

    function Line(startX, startY, endX, endY, paper) {
        var start = new Vertex(startX, startY, paper);
        var end = new Vertex(endX, endY, paper);

        Line.prototype.updateStart = function (x, y) {
            start.update(x, y);
            redraw();
            return this;
        }

        Line.prototype.updateEnd = function (x, y) {
            end.update(x, y);
            redraw();
            return this;
        }

        Line.prototype.enableEdit = function () {
            gizmo.mouseover(function () {
                gizmo.attr("stroke", "blue");
                // Show the control points
                start.startEdit();
                end.startEdit();
            });
            gizmo.mouseout(function () {
                gizmo.attr("stroke", "red");
                // Clear the control points
                start.endEdit();
                end.endEdit();
            });

        }

        var getPath = function () {
            return "M" + start.x + " " + start.y + " L" + end.x + " " + end.y;
        };

        var gizmo = paper.path(getPath());

        var redraw = function () {
            gizmo.attr("path", getPath());
            gizmo.attr("stroke", "red");
            gizmo.attr("stroke-width", LINE_WIDTH);
        }
    };

    $(document).ready(function () {
        var paper = Raphael("canvas", CANVAS_WIDTH, CANVAS_HEIGHT);
        var line;
        $("#canvas").dblclick(function (e) {
            x = e.offsetX;
            y = e.offsetY;
            line = new Line(x, y, x, y, paper);
            $("#canvas").bind("mousemove", function (e) {
                x = e.offsetX;
                y = e.offsetY;
                line = line.updateEnd(x, y);
            });
        });

        $("#canvas").mouseup(function (e) {
            $("#canvas").unbind("mousemove");
            if (line != undefined)
                line.enableEdit();
        });

        $("#clearBtn").click(function () {
            paper.clear();
        })
    });
    //]]> 
</script>